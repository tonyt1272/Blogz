from app import db
from datetime import datetime
from hash_utils import make_pw_hash, check_pw_hash

class Blog(db.Model):   # Creating persistent class that represents blog posts within the application
			# This class inherits db.Model class which was impoted above.  The .Model part
			# is a method generated by the SQLAlchemy() constructor.

	id = db.Column(db.Integer, primary_key=True)	#set to auto create primary keys for the data entry
	title = db.Column(db.String(120))				#creating a column holds a string 120 max length
	body = db.Column(db.String(5000))				#create the blog text attribute 5000 max length
	
	owner_id = db.Column(db.Integer, db.ForeignKey('user.id')) 	#Creating owner id column that is integer type ForeignKey that
									#links to a primary key from a user ('user.id')
									#The user.id object is pass as an argument to ForeignKey
													
	pub_date = db.Column(db.DateTime)
	hidden = db.Column(db.Boolean)

	def __init__(self,title,body,owner):			#constructor that creates an instance
		self.title = title  				#set the input title to the title value of the object				
		self.body = body				#set the body of the object to the entered string
		self.owner = owner				#owner is a user object for the blog post
		pub_date = datetime.utcnow()
		self.pub_date = pub_date
		self.hidden = False

class User(db.Model):

	id = db.Column(db.Integer, primary_key=True)
	user_name = db.Column(db.String(120), unique=True)		#unique=True, Not possible to add two user_name or 
	email = db.Column(db.String(120), unique=True)  		#email that are the same.	
										
	pw_hash = db.Column(db.String(120))				#create a string column for the hashed password
	
	blogs = db.relationship('Blog', backref='owner')				#This is NOT a simple column, it is a relationship
											#that is populated with blog objects from the Blog 
											#table where the owner is equal to this specific
											#user, where the equality is based on the user id. 
	def __init__(self, email, password,user_name):
		self.email = email
		self.pw_hash= make_pw_hash(password)
		self.user_name = user_name
##-----------------------------------------------------------------------------------------
